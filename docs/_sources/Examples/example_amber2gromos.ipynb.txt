{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Amber2Gromos Example"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from pygromos.files.forcefield import _generic_force_field\n",
    "from pygromos.files.gromos_system import gromos_system\n",
    "from pygromos.files.forcefield.amber import amberff\n",
    "from pygromos.gromos.gromosPP import _gromosPPbase"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# note: ambertools is required. you can install it eg with: conda install -c conda-forge ambertools\n",
    "ff = amberff.AmberFF(name = \"amberff_gaff\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "molecule = \"example_files/amber2gromos/aniline.mol2\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "gromosPP_bin_dir = None #ADAPT HERE"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## create top + cnf for aniline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['/home/salome/pymol/envs/pygromosx/bin/antechamber', '-i', '/home/salome/PhD/pyg/PyGromosTools/examples/example_files/amber2gromos/aniline.mol2', '-fi', 'mol2', '-o', 'aniline.mol2', '-fo', 'mol2', '-s', '2', '-c', 'bcc', '-nc', '0']\n",
      "\n",
      "Welcome to antechamber 21.0: molecular input file processor.\n",
      "\n",
      "acdoctor mode is on: check and diagnose problems in the input file.\n",
      "The atom type is set to gaff; the options available to the -at flag are\n",
      "    gaff, gaff2, amber, bcc, and sybyl.\n",
      "-- Check Format for mol2 File --\n",
      "   Status: pass\n",
      "Info: Ignoring Mol2 record type (@<TRIPOS>SUBSTRUCTURE).\n",
      "Info: Finished reading file (/home/salome/PhD/pyg/PyGromosTools/examples/example_files/amber2gromos/aniline.mol2); atoms read (14), bonds read (14).\n",
      "Info: Determining atomic numbers from atomic symbols which are case sensitive.\n",
      "-- Check Unusual Elements --\n",
      "   Status: pass\n",
      "-- Check Open Valences --\n",
      "   Status: pass\n",
      "-- Check Geometry --\n",
      "      for those bonded   \n",
      "      for those not bonded   \n",
      "   Status: pass\n",
      "-- Check Weird Bonds --\n",
      "   Status: pass\n",
      "-- Check Number of Units --\n",
      "   Status: pass\n",
      "acdoctor mode has completed checking the input file.\n",
      "\n",
      "Running: /home/salome/pymol/envs/pygromosx/bin/bondtype -j full -i ANTECHAMBER_BOND_TYPE.AC0 -o ANTECHAMBER_BOND_TYPE.AC -f ac\n",
      "\n",
      "Running: /home/salome/pymol/envs/pygromosx/bin/atomtype -i ANTECHAMBER_AC.AC0 -o ANTECHAMBER_AC.AC -p gaff\n",
      "Info: Total number of electrons: 50; net charge: 0\n",
      "\n",
      "Running: /home/salome/pymol/envs/pygromosx/bin/sqm -O -i sqm.in -o sqm.out\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/bin/bash: /home/salome/pymol/envs/pygromosx/lib/libtinfo.so.6: no version information available (required by /bin/bash)\n",
      "/bin/bash: /home/salome/pymol/envs/pygromosx/lib/libtinfo.so.6: no version information available (required by /bin/bash)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Running: /home/salome/pymol/envs/pygromosx/bin/am1bcc -i ANTECHAMBER_AM1BCC_PRE.AC -o ANTECHAMBER_AM1BCC.AC -f ac -p /home/salome/pymol/envs/pygromosx/dat/antechamber/BCCPARM.DAT -s 2 -j 1\n",
      "\n",
      "Running: /home/salome/pymol/envs/pygromosx/bin/atomtype -f ac -p bcc -o ANTECHAMBER_AM1BCC.AC -i ANTECHAMBER_AM1BCC_PRE.AC\n",
      "\n",
      "['/home/salome/pymol/envs/pygromosx/bin/parmchk2', '-i', '/home/salome/PhD/pyg/PyGromosTools/examples/example_files/amber2gromos/antechamber_tmp/aniline.mol2', '-f', 'mol2', '-o', 'aniline.frcmod']\n",
      "['/home/salome/pymol/envs/pygromosx/bin/tleap', '-f', 'aniline.cmd']\n",
      "-I: Adding /home/salome/pymol/envs/pygromosx/dat/leap/prep to search path.\n",
      "-I: Adding /home/salome/pymol/envs/pygromosx/dat/leap/lib to search path.\n",
      "-I: Adding /home/salome/pymol/envs/pygromosx/dat/leap/parm to search path.\n",
      "-I: Adding /home/salome/pymol/envs/pygromosx/dat/leap/cmd to search path.\n",
      "-f: Source aniline.cmd.\n",
      "\n",
      "Welcome to LEaP!\n",
      "(no leaprc in search path)\n",
      "Sourcing: ./aniline.cmd\n",
      "----- Source: /home/salome/pymol/envs/pygromosx/dat/leap/cmd/leaprc.gaff\n",
      "----- Source of /home/salome/pymol/envs/pygromosx/dat/leap/cmd/leaprc.gaff done\n",
      "Log file: ./leap.log\n",
      "Loading parameters: /home/salome/pymol/envs/pygromosx/dat/leap/parm/gaff.dat\n",
      "Reading title:\n",
      "AMBER General Force Field for organic molecules (Version 1.81, May 2017)\n",
      "----- Source: /home/salome/pymol/envs/pygromosx/dat/leap/cmd/leaprc.water.tip3p\n",
      "----- Source of /home/salome/pymol/envs/pygromosx/dat/leap/cmd/leaprc.water.tip3p done\n",
      "Loading library: /home/salome/pymol/envs/pygromosx/dat/leap/lib/atomic_ions.lib\n",
      "Loading library: /home/salome/pymol/envs/pygromosx/dat/leap/lib/solvents.lib\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/bin/bash: /home/salome/pymol/envs/pygromosx/lib/libtinfo.so.6: no version information available (required by /bin/bash)\n",
      "/bin/bash: /home/salome/pymol/envs/pygromosx/lib/libtinfo.so.6: no version information available (required by /bin/bash)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Loading parameters: /home/salome/pymol/envs/pygromosx/dat/leap/parm/frcmod.tip3p\n",
      "Reading force field modification type file (frcmod)\n",
      "Reading title:\n",
      "This is the additional/replacement parameter set for TIP3P water\n",
      "Loading parameters: /home/salome/pymol/envs/pygromosx/dat/leap/parm/frcmod.ions1lm_126_tip3p\n",
      "Reading force field modification type file (frcmod)\n",
      "Reading title:\n",
      "Li/Merz ion parameters of monovalent ions for TIP3P water model (12-6 normal usage set)\n",
      "Loading parameters: /home/salome/pymol/envs/pygromosx/dat/leap/parm/frcmod.ionsjc_tip3p\n",
      "Reading force field modification type file (frcmod)\n",
      "Reading title:\n",
      "Monovalent ion parameters for Ewald and TIP3P water from Joung & Cheatham JPCB (2008)\n",
      "Loading parameters: /home/salome/pymol/envs/pygromosx/dat/leap/parm/frcmod.ions234lm_126_tip3p\n",
      "Reading force field modification type file (frcmod)\n",
      "Reading title:\n",
      "Li/Merz ion parameters of divalent to tetravalent ions for TIP3P water model (12-6 normal usage set)\n",
      "Loading parameters: /home/salome/pymol/envs/pygromosx/dat/leap/parm/frcmod.chcl3\n",
      "Reading force field modification type file (frcmod)\n",
      "Reading title:\n",
      " chloroform frcmod file\n",
      "Using modified Bondi radii\n",
      "Loading parameters: /home/salome/PhD/pyg/PyGromosTools/examples/example_files/amber2gromos/parmchk_tmp/aniline.frcmod\n",
      "Reading force field modification type file (frcmod)\n",
      "Reading title:\n",
      "Remark line goes here\n",
      "Loading Mol2 file: /home/salome/PhD/pyg/PyGromosTools/examples/example_files/amber2gromos/antechamber_tmp/aniline.mol2\n",
      "Reading MOLECULE named ligand_1\n",
      "Checking Unit.\n",
      "Building topology.\n",
      "Building atom parameters.\n",
      "Building bond parameters.\n",
      "Building angle parameters.\n",
      "Building proper torsion parameters.\n",
      "Building improper torsion parameters.\n",
      " total 7 improper torsions applied\n",
      "Building H-Bond parameters.\n",
      "Incorporating Non-Bonded adjustments.\n",
      "Not Marking per-residue atom chain types.\n",
      "Marking per-residue atom chain types.\n",
      "  (Residues lacking connect0/connect1 - \n",
      "   these don't have chain types marked:\n",
      "\n",
      "\tres\ttotal affected\n",
      "\n",
      "\tLI1\t1\n",
      "  )\n",
      " (no restraints)\n",
      "Writing pdb file: /home/salome/PhD/pyg/PyGromosTools/examples/example_files/amber2gromos/tleap_tmp/aniline.leap.pdb\n",
      "\tQuit\n",
      "\n",
      "Exiting LEaP: Errors = 0; Warnings = 0; Notes = 0.\n",
      "converted topology saved to /home/salome/PhD/pyg/PyGromosTools/examples/example_files/amber2gromos/aniline.top\n",
      "converted coordinates saved to /home/salome/PhD/pyg/PyGromosTools/examples/example_files/amber2gromos/aniline.cnf\n"
     ]
    }
   ],
   "source": [
    "ff.solvate = False\n",
    "system = gromos_system.Gromos_System(work_folder = \"example_files/amber2gromos\",\n",
    "                                     system_name = \"aniline\",\n",
    "                                     forcefield = ff,\n",
    "                                     auto_convert = True,\n",
    "                                     in_mol2_file = molecule,\n",
    "                                     in_gromosPP_bin_dir = gromosPP_bin_dir)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## create top + cnf for aniline, solvated in CHCl3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "ff.solvate = True\n",
    "ff.solventbox = \"CHCL3BOX\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['/home/salome/pymol/envs/pygromosx/bin/antechamber', '-i', '/home/salome/PhD/pyg/PyGromosTools/examples/example_files/amber2gromos/aniline.mol2', '-fi', 'mol2', '-o', 'aniline.mol2', '-fo', 'mol2', '-s', '2', '-c', 'bcc', '-nc', '0']\n",
      "\n",
      "Welcome to antechamber 21.0: molecular input file processor.\n",
      "\n",
      "acdoctor mode is on: check and diagnose problems in the input file.\n",
      "The atom type is set to gaff; the options available to the -at flag are\n",
      "    gaff, gaff2, amber, bcc, and sybyl.\n",
      "-- Check Format for mol2 File --\n",
      "   Status: pass\n",
      "Info: Ignoring Mol2 record type (@<TRIPOS>SUBSTRUCTURE).\n",
      "Info: Finished reading file (/home/salome/PhD/pyg/PyGromosTools/examples/example_files/amber2gromos/aniline.mol2); atoms read (14), bonds read (14).\n",
      "Info: Determining atomic numbers from atomic symbols which are case sensitive.\n",
      "-- Check Unusual Elements --\n",
      "   Status: pass\n",
      "-- Check Open Valences --\n",
      "   Status: pass\n",
      "-- Check Geometry --\n",
      "      for those bonded   \n",
      "      for those not bonded   \n",
      "   Status: pass\n",
      "-- Check Weird Bonds --\n",
      "   Status: pass\n",
      "-- Check Number of Units --\n",
      "   Status: pass\n",
      "acdoctor mode has completed checking the input file.\n",
      "\n",
      "Running: /home/salome/pymol/envs/pygromosx/bin/bondtype -j full -i ANTECHAMBER_BOND_TYPE.AC0 -o ANTECHAMBER_BOND_TYPE.AC -f ac\n",
      "\n",
      "Running: /home/salome/pymol/envs/pygromosx/bin/atomtype -i ANTECHAMBER_AC.AC0 -o ANTECHAMBER_AC.AC -p gaff\n",
      "Info: Total number of electrons: 50; net charge: 0\n",
      "\n",
      "Running: /home/salome/pymol/envs/pygromosx/bin/sqm -O -i sqm.in -o sqm.out\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/bin/bash: /home/salome/pymol/envs/pygromosx/lib/libtinfo.so.6: no version information available (required by /bin/bash)\n",
      "/bin/bash: /home/salome/pymol/envs/pygromosx/lib/libtinfo.so.6: no version information available (required by /bin/bash)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Running: /home/salome/pymol/envs/pygromosx/bin/am1bcc -i ANTECHAMBER_AM1BCC_PRE.AC -o ANTECHAMBER_AM1BCC.AC -f ac -p /home/salome/pymol/envs/pygromosx/dat/antechamber/BCCPARM.DAT -s 2 -j 1\n",
      "\n",
      "Running: /home/salome/pymol/envs/pygromosx/bin/atomtype -f ac -p bcc -o ANTECHAMBER_AM1BCC.AC -i ANTECHAMBER_AM1BCC_PRE.AC\n",
      "\n",
      "['/home/salome/pymol/envs/pygromosx/bin/parmchk2', '-i', '/home/salome/PhD/pyg/PyGromosTools/examples/example_files/ambertools_pipeline/antechamber_tmp/aniline.mol2', '-f', 'mol2', '-o', 'aniline.frcmod']\n",
      "['/home/salome/pymol/envs/pygromosx/bin/tleap', '-f', 'aniline.cmd']\n",
      "-I: Adding /home/salome/pymol/envs/pygromosx/dat/leap/prep to search path.\n",
      "-I: Adding /home/salome/pymol/envs/pygromosx/dat/leap/lib to search path.\n",
      "-I: Adding /home/salome/pymol/envs/pygromosx/dat/leap/parm to search path.\n",
      "-I: Adding /home/salome/pymol/envs/pygromosx/dat/leap/cmd to search path.\n",
      "-f: Source aniline.cmd.\n",
      "\n",
      "Welcome to LEaP!\n",
      "(no leaprc in search path)\n",
      "Sourcing: ./aniline.cmd\n",
      "----- Source: /home/salome/pymol/envs/pygromosx/dat/leap/cmd/leaprc.gaff\n",
      "----- Source of /home/salome/pymol/envs/pygromosx/dat/leap/cmd/leaprc.gaff done\n",
      "Log file: ./leap.log\n",
      "Loading parameters: /home/salome/pymol/envs/pygromosx/dat/leap/parm/gaff.dat\n",
      "Reading title:\n",
      "AMBER General Force Field for organic molecules (Version 1.81, May 2017)\n",
      "----- Source: /home/salome/pymol/envs/pygromosx/dat/leap/cmd/leaprc.water.tip3p\n",
      "----- Source of /home/salome/pymol/envs/pygromosx/dat/leap/cmd/leaprc.water.tip3p done\n",
      "Loading library: /home/salome/pymol/envs/pygromosx/dat/leap/lib/atomic_ions.lib\n",
      "Loading library: /home/salome/pymol/envs/pygromosx/dat/leap/lib/solvents.lib\n",
      "Loading parameters: /home/salome/pymol/envs/pygromosx/dat/leap/parm/frcmod.tip3p\n",
      "Reading force field modification type file (frcmod)\n",
      "Reading title:\n",
      "This is the additional/replacement parameter set for TIP3P water\n",
      "Loading parameters: /home/salome/pymol/envs/pygromosx/dat/leap/parm/frcmod.ions1lm_126_tip3p\n",
      "Reading force field modification type file (frcmod)\n",
      "Reading title:\n",
      "Li/Merz ion parameters of monovalent ions for TIP3P water model (12-6 normal usage set)\n",
      "Loading parameters: /home/salome/pymol/envs/pygromosx/dat/leap/parm/frcmod.ionsjc_tip3p\n",
      "Reading force field modification type file (frcmod)\n",
      "Reading title:\n",
      "Monovalent ion parameters for Ewald and TIP3P water from Joung & Cheatham JPCB (2008)\n",
      "Loading parameters: /home/salome/pymol/envs/pygromosx/dat/leap/parm/frcmod.ions234lm_126_tip3p\n",
      "Reading force field modification type file (frcmod)\n",
      "Reading title:\n",
      "Li/Merz ion parameters of divalent to tetravalent ions for TIP3P water model (12-6 normal usage set)\n",
      "Loading parameters: /home/salome/pymol/envs/pygromosx/dat/leap/parm/frcmod.chcl3\n",
      "Reading force field modification type file (frcmod)\n",
      "Reading title:\n",
      " chloroform frcmod file\n",
      "Using modified Bondi radii\n",
      "Loading parameters: /home/salome/PhD/pyg/PyGromosTools/examples/example_files/ambertools_pipeline/parmchk_tmp/aniline.frcmod\n",
      "Reading force field modification type file (frcmod)\n",
      "Reading title:\n",
      "Remark line goes here\n",
      "Loading Mol2 file: /home/salome/PhD/pyg/PyGromosTools/examples/example_files/ambertools_pipeline/antechamber_tmp/aniline.mol2\n",
      "Reading MOLECULE named ligand_1\n",
      "  Solute vdw bounding box:              8.593 7.203 3.895\n",
      "  Total bounding box for atom centers:  36.593 35.203 31.895\n",
      "  Solvent unit box:                     56.496 56.496 56.496\n",
      "  Total vdw box size:                   40.347 38.887 35.650 angstroms.\n",
      "  Volume: 55933.916 A^3 \n",
      "  Total mass 28741.446 amu,  Density 0.853 g/cc\n",
      "  Added 240 residues.\n",
      "Checking Unit.\n",
      "Building topology.\n",
      "Building atom parameters.\n",
      "Building bond parameters.\n",
      "Building angle parameters.\n",
      "Building proper torsion parameters.\n",
      "Building improper torsion parameters.\n",
      " total 7 improper torsions applied\n",
      "Building H-Bond parameters.\n",
      "Incorporating Non-Bonded adjustments.\n",
      "Not Marking per-residue atom chain types.\n",
      "Marking per-residue atom chain types.\n",
      "  (Residues lacking connect0/connect1 - \n",
      "   these don't have chain types marked:\n",
      "\n",
      "\tres\ttotal affected\n",
      "\n",
      "\tLI1\t1\n",
      "  )\n",
      " (no restraints)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/bin/bash: /home/salome/pymol/envs/pygromosx/lib/libtinfo.so.6: no version information available (required by /bin/bash)\n",
      "/bin/bash: /home/salome/pymol/envs/pygromosx/lib/libtinfo.so.6: no version information available (required by /bin/bash)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Writing pdb file: /home/salome/PhD/pyg/PyGromosTools/examples/example_files/ambertools_pipeline/tleap_tmp/anilineleap_CHCL3BOX.pdb\n",
      "   printing CRYST1 record to PDB file with box info\n",
      "\tQuit\n",
      "\n",
      "Exiting LEaP: Errors = 0; Warnings = 0; Notes = 0.\n",
      "converted topology saved to /home/salome/PhD/pyg/PyGromosTools/examples/example_files/ambertools_pipeline/aniline_CHCL3BOX.top\n",
      "  40.3470000  38.8870000  35.6500000  90.0000000  90.0000000  90.0000000\n",
      "\n",
      "converted coordinates saved to /home/salome/PhD/pyg/PyGromosTools/examples/example_files/ambertools_pipeline/aniline_CHCL3BOX.cnf\n"
     ]
    }
   ],
   "source": [
    "system = gromos_system.Gromos_System(work_folder = \"example_files/amber2gromos\",\n",
    "                                     system_name = \"aniline\",\n",
    "                                     forcefield = ff,\n",
    "                                     auto_convert = True,\n",
    "                                     in_mol2_file = molecule,\n",
    "                                     in_gromosPP_bin_dir = gromosPP_bin_dir)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ff.amber.solvate"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## create top + cnf for aniline, solvated in TIP3P water"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "ff.solventbox = \"TIP3PBOX\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['/home/salome/pymol/envs/pygromosx/bin/antechamber', '-i', '/home/salome/PhD/pyg/PyGromosTools/examples/example_files/amber2gromos/aniline.mol2', '-fi', 'mol2', '-o', 'aniline.mol2', '-fo', 'mol2', '-s', '2', '-c', 'bcc', '-nc', '0']\n",
      "\n",
      "Welcome to antechamber 21.0: molecular input file processor.\n",
      "\n",
      "acdoctor mode is on: check and diagnose problems in the input file.\n",
      "The atom type is set to gaff; the options available to the -at flag are\n",
      "    gaff, gaff2, amber, bcc, and sybyl.\n",
      "-- Check Format for mol2 File --\n",
      "   Status: pass\n",
      "Info: Ignoring Mol2 record type (@<TRIPOS>SUBSTRUCTURE).\n",
      "Info: Finished reading file (/home/salome/PhD/pyg/PyGromosTools/examples/example_files/amber2gromos/aniline.mol2); atoms read (14), bonds read (14).\n",
      "Info: Determining atomic numbers from atomic symbols which are case sensitive.\n",
      "-- Check Unusual Elements --\n",
      "   Status: pass\n",
      "-- Check Open Valences --\n",
      "   Status: pass\n",
      "-- Check Geometry --\n",
      "      for those bonded   \n",
      "      for those not bonded   \n",
      "   Status: pass\n",
      "-- Check Weird Bonds --\n",
      "   Status: pass\n",
      "-- Check Number of Units --\n",
      "   Status: pass\n",
      "acdoctor mode has completed checking the input file.\n",
      "\n",
      "Running: /home/salome/pymol/envs/pygromosx/bin/bondtype -j full -i ANTECHAMBER_BOND_TYPE.AC0 -o ANTECHAMBER_BOND_TYPE.AC -f ac\n",
      "\n",
      "Running: /home/salome/pymol/envs/pygromosx/bin/atomtype -i ANTECHAMBER_AC.AC0 -o ANTECHAMBER_AC.AC -p gaff\n",
      "Info: Total number of electrons: 50; net charge: 0\n",
      "\n",
      "Running: /home/salome/pymol/envs/pygromosx/bin/sqm -O -i sqm.in -o sqm.out\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/bin/bash: /home/salome/pymol/envs/pygromosx/lib/libtinfo.so.6: no version information available (required by /bin/bash)\n",
      "/bin/bash: /home/salome/pymol/envs/pygromosx/lib/libtinfo.so.6: no version information available (required by /bin/bash)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Running: /home/salome/pymol/envs/pygromosx/bin/am1bcc -i ANTECHAMBER_AM1BCC_PRE.AC -o ANTECHAMBER_AM1BCC.AC -f ac -p /home/salome/pymol/envs/pygromosx/dat/antechamber/BCCPARM.DAT -s 2 -j 1\n",
      "\n",
      "Running: /home/salome/pymol/envs/pygromosx/bin/atomtype -f ac -p bcc -o ANTECHAMBER_AM1BCC.AC -i ANTECHAMBER_AM1BCC_PRE.AC\n",
      "\n",
      "['/home/salome/pymol/envs/pygromosx/bin/parmchk2', '-i', '/home/salome/PhD/pyg/PyGromosTools/examples/example_files/ambertools_pipeline/antechamber_tmp/aniline.mol2', '-f', 'mol2', '-o', 'aniline.frcmod']\n",
      "['/home/salome/pymol/envs/pygromosx/bin/tleap', '-f', 'aniline.cmd']\n",
      "-I: Adding /home/salome/pymol/envs/pygromosx/dat/leap/prep to search path.\n",
      "-I: Adding /home/salome/pymol/envs/pygromosx/dat/leap/lib to search path.\n",
      "-I: Adding /home/salome/pymol/envs/pygromosx/dat/leap/parm to search path.\n",
      "-I: Adding /home/salome/pymol/envs/pygromosx/dat/leap/cmd to search path.\n",
      "-f: Source aniline.cmd.\n",
      "\n",
      "Welcome to LEaP!\n",
      "(no leaprc in search path)\n",
      "Sourcing: ./aniline.cmd\n",
      "----- Source: /home/salome/pymol/envs/pygromosx/dat/leap/cmd/leaprc.gaff\n",
      "----- Source of /home/salome/pymol/envs/pygromosx/dat/leap/cmd/leaprc.gaff done\n",
      "Log file: ./leap.log\n",
      "Loading parameters: /home/salome/pymol/envs/pygromosx/dat/leap/parm/gaff.dat\n",
      "Reading title:\n",
      "AMBER General Force Field for organic molecules (Version 1.81, May 2017)\n",
      "----- Source: /home/salome/pymol/envs/pygromosx/dat/leap/cmd/leaprc.water.tip3p\n",
      "----- Source of /home/salome/pymol/envs/pygromosx/dat/leap/cmd/leaprc.water.tip3p done\n",
      "Loading library: /home/salome/pymol/envs/pygromosx/dat/leap/lib/atomic_ions.lib\n",
      "Loading library: /home/salome/pymol/envs/pygromosx/dat/leap/lib/solvents.lib\n",
      "Loading parameters: /home/salome/pymol/envs/pygromosx/dat/leap/parm/frcmod.tip3p\n",
      "Reading force field modification type file (frcmod)\n",
      "Reading title:\n",
      "This is the additional/replacement parameter set for TIP3P water\n",
      "Loading parameters: /home/salome/pymol/envs/pygromosx/dat/leap/parm/frcmod.ions1lm_126_tip3p\n",
      "Reading force field modification type file (frcmod)\n",
      "Reading title:\n",
      "Li/Merz ion parameters of monovalent ions for TIP3P water model (12-6 normal usage set)\n",
      "Loading parameters: /home/salome/pymol/envs/pygromosx/dat/leap/parm/frcmod.ionsjc_tip3p\n",
      "Reading force field modification type file (frcmod)\n",
      "Reading title:\n",
      "Monovalent ion parameters for Ewald and TIP3P water from Joung & Cheatham JPCB (2008)\n",
      "Loading parameters: /home/salome/pymol/envs/pygromosx/dat/leap/parm/frcmod.ions234lm_126_tip3p\n",
      "Reading force field modification type file (frcmod)\n",
      "Reading title:\n",
      "Li/Merz ion parameters of divalent to tetravalent ions for TIP3P water model (12-6 normal usage set)\n",
      "Loading parameters: /home/salome/pymol/envs/pygromosx/dat/leap/parm/frcmod.chcl3\n",
      "Reading force field modification type file (frcmod)\n",
      "Reading title:\n",
      " chloroform frcmod file\n",
      "Using modified Bondi radii\n",
      "Loading parameters: /home/salome/PhD/pyg/PyGromosTools/examples/example_files/ambertools_pipeline/parmchk_tmp/aniline.frcmod\n",
      "Reading force field modification type file (frcmod)\n",
      "Reading title:\n",
      "Remark line goes here\n",
      "Loading Mol2 file: /home/salome/PhD/pyg/PyGromosTools/examples/example_files/ambertools_pipeline/antechamber_tmp/aniline.mol2\n",
      "Reading MOLECULE named ligand_1\n",
      "  Solute vdw bounding box:              8.593 7.203 3.895\n",
      "  Total bounding box for atom centers:  36.593 35.203 31.895\n",
      "  Solvent unit box:                     18.774 18.774 18.774\n",
      "  Total vdw box size:                   39.546 38.307 34.954 angstroms.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/bin/bash: /home/salome/pymol/envs/pygromosx/lib/libtinfo.so.6: no version information available (required by /bin/bash)\n",
      "/bin/bash: /home/salome/pymol/envs/pygromosx/lib/libtinfo.so.6: no version information available (required by /bin/bash)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  Volume: 52950.481 A^3 \n",
      "  Total mass 21982.566 amu,  Density 0.689 g/cc\n",
      "  Added 1215 residues.\n",
      "Checking Unit.\n",
      "Building topology.\n",
      "Building atom parameters.\n",
      "Building bond parameters.\n",
      "Building angle parameters.\n",
      "Building proper torsion parameters.\n",
      "Building improper torsion parameters.\n",
      " total 7 improper torsions applied\n",
      "Building H-Bond parameters.\n",
      "Incorporating Non-Bonded adjustments.\n",
      "Not Marking per-residue atom chain types.\n",
      "Marking per-residue atom chain types.\n",
      "  (Residues lacking connect0/connect1 - \n",
      "   these don't have chain types marked:\n",
      "\n",
      "\tres\ttotal affected\n",
      "\n",
      "\tLI1\t1\n",
      "\tWAT\t1215\n",
      "  )\n",
      " (no restraints)\n",
      "Writing pdb file: /home/salome/PhD/pyg/PyGromosTools/examples/example_files/ambertools_pipeline/tleap_tmp/anilineleap_TIP3PBOX.pdb\n",
      "   printing CRYST1 record to PDB file with box info\n",
      "\tQuit\n",
      "\n",
      "Exiting LEaP: Errors = 0; Warnings = 0; Notes = 0.\n",
      "converted topology saved to /home/salome/PhD/pyg/PyGromosTools/examples/example_files/ambertools_pipeline/aniline_TIP3PBOX.top\n",
      "  39.5462090  38.3065070  34.9536470  90.0000000  90.0000000  90.0000000\n",
      "\n",
      "converted coordinates saved to /home/salome/PhD/pyg/PyGromosTools/examples/example_files/ambertools_pipeline/aniline_TIP3PBOX.cnf\n"
     ]
    }
   ],
   "source": [
    "system = gromos_system.Gromos_System(work_folder = \"example_files/amber2gromos\",\n",
    "                                     system_name = \"aniline\",\n",
    "                                     forcefield = ff,\n",
    "                                     auto_convert = True,\n",
    "                                     in_mol2_file = molecule,\n",
    "                                     in_gromosPP_bin_dir = gromosPP_bin_dir)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "interpreter": {
   "hash": "c67b8b39cac3dff0549f345c39a8258faf50e6a34378c258b22576fa16856637"
  },
  "kernelspec": {
   "display_name": "pygromosx",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
